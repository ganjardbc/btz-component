{"version":3,"sources":["../../src/components/LiveText/index.js","../../src/components/MoveableList/components/ItemTypes.js","../../src/components/MoveableList/components/styles.js","../../src/components/MoveableList/components/Card.js","../../src/components/MoveableList/components/DNDContainer.js","../../src/components/MoveableList/index.js","../../src/index.js","App.js","index.js"],"names":["constructor","render","this","bubble","className","styles","src","loader","unloader","bgColor","dt","key","data-tip","data-type","data-border","style","position","top","left","cursor","card","border","padding","margin","place","width","container","containerWhite","backgroundColor","Card","moveCard","ref","useRef","useDrop","accept","ItemTypes","hover","dragIndex","item","hoverIndex","hoverBoundingRect","hoverMiddleY","hoverClientY","monitor","clientOffset","useDrag","type","id","index","collect","isDragging","opacity","drag","drop","DNDContainer","props","useState","useCallback","dragCard","cards","setCards","update","$splice","backend","HTML5Backend","content","renderCard","data","LiveTextComponent","image","MoveableListComponent","App","height","title","description","x","y","color","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.acfd0916.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { Img } from 'react-image'\nimport styles from './styles/styles.css'\n\nclass LiveText extends Component {\n\tconstructor (props) {\n    \tsuper(props)\n    \tthis.state = {}\n    }\n\n\trender () {\n\t\tconst {image, bubble} = this.props\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<Img \n\t\t\t\t\tsrc={image}\n\t\t\t\t\tclassName={styles.image}\n\t\t\t\t\tloader={\n\t\t\t\t\t\t<div className=\"icn\">\n\t\t\t\t\t\t\t<i className=\"color-green post-center fa fa-lg fa-circle-notch fa-spin\" /> <span className=\"txt-site txt-primary txt-thin\">Loading Image</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\tunloader={\n\t\t\t\t\t\t<div className=\"icn\">\n\t\t\t\t\t\t\t<i className=\"color-green post-center fa fa-lg fa-circle-notch fa-spin\" /> <span className=\"txt-site txt-primary txt-thin\">Try Again</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t} />\n\t\t\t\t\t\t\n\t\t\t\t{bubble && bubble.map((dt, i) => {\n\t\t\t\t\tlet bgColor = styles.bubble_red\n\n\t\t\t\t\tswitch (dt.color) {\n\t\t\t\t\t\tcase 'red':\n\t\t\t\t\t\t\tbgColor = styles.bubble_red\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'orange':\n\t\t\t\t\t\t\tbgColor = styles.bubble_orange\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'green':\n\t\t\t\t\t\t\tbgColor = styles.bubble_green\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'blue':\n\t\t\t\t\t\t\tbgColor = styles.bubble_blue\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 'grey':\n\t\t\t\t\t\t\tbgColor = styles.bubble_grey\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbgColor = styles.bubble_red\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\tdata-tip={dt.description}\n\t\t\t\t\t\t\tdata-type=\"light\" \n\t\t\t\t\t\t\tdata-border=\"true\"\n\t\t\t\t\t\t\tclassName={bgColor} \n\t\t\t\t\t\t\tstyle={{position: 'absolute', top: `${dt.x}%`, left: `${dt.y}%`, cursor: 'default'}}>\n\t\t\t\t\t\t\t{ dt.title }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\n\t\t\t\t<ReactTooltip />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LiveText","export default {\n  CARD: 'card',\n}\n","const card = {\n    border: '2px dashed gray',\n    padding: '10px 15px',\n    margin: '5px'\n}\n\nexport default {\n    place: {\n        width: '100%',\n    },\n    container: {\n        ...card\n    },\n    containerWhite: {\n        ...card,\n        backgroundColor: 'white',\n        cursor: 'move',\n    }\n}","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nimport style from './styles'\n\nconst Card = ({ id, content, index, moveCard }) => {\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  return (\n    <div ref={ref} style={{ ...style.containerWhite, opacity }}>\n      {content}\n    </div>\n  )\n}\nexport default Card\n","import React, { useState, useCallback } from 'react'\nimport Card from './Card'\nimport update from 'immutability-helper'\nimport style from './styles'\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\n\nconst DNDContainer = (props) => {\n\t{\n    \tconst [cards, setCards] = useState(props.data ? props.data : [])\n\n    \tconst moveCard = useCallback(\n      \t\t(dragIndex, hoverIndex) => {\n\t\t\t\tconst dragCard = cards[dragIndex]\n\t\t\t\tsetCards(\n\t\t\t\t\tupdate(cards, {\n\t\t\t\t\t\t$splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]],\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t},\n\t\t\t[cards],\n    \t)\n\n    \tconst renderCard = (card, index) => {\n      \t\treturn (\n\t\t\t\t<Card\n\t\t\t\t\tkey={card.id}\n\t\t\t\t\tindex={index}\n\t\t\t\t\tid={card.id}\n\t\t\t\t\tcontent={card.content}\n\t\t\t\t\tmoveCard={moveCard}\n\t\t\t\t/>\n      \t\t)\n    \t}\n\n\t\treturn (\n\t\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t\t<div style={style.place}>\n\t\t\t\t\t{cards.map((card, i) => {\n\t\t\t\t\t\tvar item = (card && card.id) && renderCard(card, i)\n\t\t\t\t\t\treturn item\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</DndProvider>\n\t\t)\n\t}\n}\n\nexport default DNDContainer\n","import React, {Component} from 'react'\nimport DNDContainer from './components/DNDContainer'\n\nclass DNDComponent extends Component {\n\tconstructor (props) {\n    \tsuper(props)\n    \tthis.state = {\n        \tdata: props.data ? props.data : []\n    \t}\n    }\n\n\trender () {\n\t\tconst {data} = this.state \n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<DNDContainer data={data} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default DNDComponent","import React from 'react'\nimport LiveText from './components/LiveText'\nimport MoveableList from './components/MoveableList'\n\nexport const LiveTextComponent = ({ image = '', bubble = [] }) => {\n  return <LiveText image={image} bubble={bubble} />\n}\n\nexport const MoveableListComponent = ({ data }) => {\n\treturn <MoveableList data={data} />\n  }\n","import React from 'react'\n\nimport { LiveTextComponent, MoveableListComponent } from 'btz-component'\nimport 'btz-component/dist/index.css'\n\nconst App = () => {\n    return (\n        <div style={{padding: 20}}>\n            <h2>Live Text</h2>\n            <div style={{width: 400, height: 400}}>\n                <LiveTextComponent \n                    image={'https://lelogama.go-jek.com/prime/upload/image/come-be-a-gojek-driver-partner.svg'} \n                    bubble={[\n                        {title: '12', description: 'lorem ipsum', x: 15, y: 20, color: 'grey'},\n                        {title: '19', description: 'lorem ipsum', x: 10, y: 67, color: 'orange'},\n                        {title: '55', description: 'lorem ipsum', x: 32, y: 80, color: 'red'},\n                        {title: '24', description: 'lorem ipsum', x: 60, y: 80, color: 'green'},\n                        {title: '37', description: 'lorem ipsum', x: 43, y: 10, color: 'red'},\n                        {title: '22', description: 'lorem ipsum', x: 45, y: 40, color: 'orange'},\n                        {title: '80', description: 'lorem ipsum', x: 80, y: 27, color: 'blue'}\n                    ]}\n                />\n            </div>\n\n            <h2>Moveable List</h2>\n            <div style={{width: 400}}>\n                <MoveableListComponent data={[\n                    {\n                        id: 1,\n                        content: 'Write a cool JS library',\n                    },\n                    {\n                        id: 2,\n                        content: 'Make it generic enough',\n                    },\n                    {\n                        id: 3,\n                        content: 'Write README',\n                    },\n                    {\n                        id: 4,\n                        content: 'Create some examples',\n                    },\n                    {\n                        id: 5,\n                        content: 'Spam in Twitter and IRC to promote it (note that this element is taller than the others)',\n                    },\n                    {\n                        id: 6,\n                        content: '???',\n                    },\n                    {\n                        id: 7,\n                        content: 'PROFIT',\n                    },\n                    {\n                        id: 8,\n                        content: 'AS IS AS',\n                    },\n                ]} />\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}